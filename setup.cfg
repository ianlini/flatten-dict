[coverage:run]
parallel = True
branch = True
source =
    flatten_dict
omit =
    */tests/*

[coverage:paths]
source =
    src/flatten_dict
    .tox/*/lib/python*/site-packages/flatten_dict

[flake8]
# flake8 (F, E999): https://flake8.pycqa.org/en/latest/user/error-codes.html
# mccabe (C901): https://pypi.org/project/mccabe/
# pycodestyle (E, W): https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
# pep8-naming (N8): https://pypi.org/project/pep8-naming/
# flake8-import-order (I): https://pypi.org/project/flake8-import-order/
# flake8-bugbear (B): https://pypi.org/project/flake8-bugbear/
# flake8-comprehensions (C4): https://pypi.org/project/flake8-comprehensions/
# flake8-docstrings (D): https://pypi.org/project/flake8-docstrings/, http://www.pydocstyle.org/en/5.0.1/error_codes.html
# flake8-logging-format (G): https://pypi.org/project/flake8-logging-format/
# flake8-return (R5): https://pypi.org/project/flake8-return/
# flake8-black (BLK): https://pypi.org/project/flake8-black/
enable-extensions = G
ignore =
    # E203: whitespace before ':'
    # ignore this because it violates PEP8 (https://github.com/PyCQA/pycodestyle/issues/373)
    E203,
    # E722: do not use bare except, specify exception instead
    # replaced by B001
    E722,
    # W503: line break before binary operator
    # conflict with black's style
    W503,
    # N802: function name should be lowercase
    # uppercase is acceptable for matrix names
    N802,
    # N803: argument name should be lowercase
    # uppercase is acceptable for matrix names
    N803,
    # N806: variable in function should be lowercase
    # uppercase is acceptable for matrix names
    N806,
    # N812: lowercase imported as non lowercase
    # this is for `import torch.nn.functional as F`
    N812,
    # C401: Unnecessary generator - rewrite as a set comprehension.
    # we accept `set(x for x in iterable)` because it's clearer than `{x for x in iterable}`
    # and is consistent with empty set `set()` (`{}` is empty dict)
    C401,
    # ignore all D10 codes because we are not foracing people to write docstring
    # D100: Missing docstring in public module
    D100,
    # D101: Missing docstring in public class
    D101,
    # D102: Missing docstring in public method
    D102,
    # D103: Missing docstring in public function
    D103,
    # D104: Missing docstring in public package
    D104,
    # D105: Missing docstring in magic method
    D105,
    # D106: Missing docstring in public nested class
    D106,
    # D107: Missing docstring in __init__
    D107,
    # R504: you shouldn`t assign value to variable if it will be use only as return value
    R504,
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs,
max-complexity = 10
max-line-length = 99
import-order-style = pep8
application-import-names = flatten_dict
docstring-convention = numpy
